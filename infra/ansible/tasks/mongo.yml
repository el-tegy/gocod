- hosts: mongo_cluster
  become: true
  vars:
    mongo_username: "mongo"  
    mongo_password: "password"  
    mongo_data_volume: "/mongo/data"  

  tasks:
    - name: Check for existing MongoDB container
      command: docker ps -a -q -f name=mongo
      register: mongo_container
      failed_when: mongo_container.rc != 0

    - name: Stop existing MongoDB container
      command: docker stop mongo
      when: mongo_container.stdout != ""

    - name: Remove existing MongoDB container
      command: docker rm mongo
      when: mongo_container.stdout != ""

    - name: Check if port 27017 is in use
      shell: netstat -tuln | grep -E ':27017'
      register: port_check
      failed_when: port_check.rc == 0
      ignore_errors: true

    - name: Fail if port 27017 is in use by another process
      fail:
        msg: "Port 27017 is already in use by another process"
      when: port_check.rc == 0 and mongo_container.stdout == ""

    - name: Ensure MongoDB data directory exists
      file:
        path: "{{ mongo_data_volume }}"
        state: directory
        mode: '0777'
      become: true

    - name: Start MongoDB with Docker
      shell: >
        docker run --name=mongo --detach \
        -p 27017:27017 \
        -e MONGO_INITDB_ROOT_USERNAME="{{ mongo_username }}" \
        -e MONGO_INITDB_ROOT_PASSWORD="{{ mongo_password }}" \
        --volume="{{ mongo_data_volume }}":/data \
        --restart unless-stopped \
        mongo:6 --auth 
      when: port_check.rc != 0 or mongo_container.stdout != ""
